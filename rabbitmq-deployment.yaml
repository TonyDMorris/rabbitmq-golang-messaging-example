apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ingress-nginx
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: rabbitmq
            - name: RABBITMQ_DEFAULT_USER
              value: rabbitmq
            - name: RABBITMQ_ERLANG_COOKIE
              value: "'takeMyCookies'"
            - name: RABBITMQ_SSL_CACERTFILE
              value: /tls-gen/basic/result/ca_certificate.pem
            - name: RABBITMQ_SSL_CERTFILE
              value: /tls-gen/basic/result/server_certificate.pem
            - name: RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT
              value: "false"
            - name: RABBITMQ_SSL_KEYFILE
              value: /tls-gen/basic/result/server_key.pem
            - name: RABBITMQ_SSL_VERIFY
              value: verify_none
          image: tonehmorris/rabbitmq-golang-demo:rabbitmq
          imagePullPolicy: "Always"
          name: rabbitmq
          ports:
            - containerPort: 15671
            - containerPort: 15672
            - containerPort: 5672
            - containerPort: 5671
            - containerPort: 25672
          resources: {}

      hostname: rabbitmq
      restartPolicy: Always
      serviceAccountName: ""

status: {}
